// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'core/data/entity/sejour_edntity.dart';
import 'features/audio_messages/data/entity/audio_message_entity.dart';
import 'features/photos/data/entity/photo_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 5359307590544561833),
      name: 'AudioMessageEntity',
      lastPropertyId: const obx_int.IdUid(9, 6696507312390457237),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6505501338648692902),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8667362915778867675),
            name: 'path',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7595766843865130974),
            name: 'isShared',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3707690430734027029),
            name: 'duration',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5075371693961181471),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5640633355498102174),
            name: 'extension',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3416627527466033777),
            name: 'recordedDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8505531250225909643),
            name: 'attachmentId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6696507312390457237),
            name: 'audioData',
            type: 23,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3598991388664813455),
      name: 'MediaEntity',
      lastPropertyId: const obx_int.IdUid(9, 122568108393872964),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 883839372508696169),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3117565197699824963),
            name: 'isPhoto',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4664335817315611926),
            name: 'path',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 150232643992240167),
            name: 'isShared',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8969611348666811825),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6447826183324153595),
            name: 'extension',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4895033118699136721),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3044654762022514693),
            name: 'comment',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 122568108393872964),
            name: 'hasComment',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 2690515169041347266),
      name: 'SejourDayEntity',
      lastPropertyId: const obx_int.IdUid(5, 9140180783542424948),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4532774385309432900),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5512715089958351549),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4465489323095154403),
            name: 'isFirstDay',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 9053701080194118973),
            name: 'isLastDay',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 9140180783542424948),
            name: 'date',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 2690515169041347266),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AudioMessageEntity: obx_int.EntityDefinition<AudioMessageEntity>(
        model: _entities[0],
        toOneRelations: (AudioMessageEntity object) => [],
        toManyRelations: (AudioMessageEntity object) => {},
        getId: (AudioMessageEntity object) => object.id,
        setId: (AudioMessageEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AudioMessageEntity object, fb.Builder fbb) {
          final pathOffset = fbb.writeString(object.path);
          final nameOffset = fbb.writeString(object.name);
          final extensionOffset = fbb.writeString(object.extension);
          final attachmentIdOffset = object.attachmentId == null
              ? null
              : fbb.writeString(object.attachmentId!);
          final audioDataOffset = object.audioData == null
              ? null
              : fbb.writeListInt8(object.audioData!);
          fbb.startTable(10);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, pathOffset);
          fbb.addBool(2, object.isShared);
          fbb.addFloat64(3, object.duration);
          fbb.addOffset(4, nameOffset);
          fbb.addOffset(5, extensionOffset);
          fbb.addInt64(6, object.recordedDate.millisecondsSinceEpoch);
          fbb.addOffset(7, attachmentIdOffset);
          fbb.addOffset(8, audioDataOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final pathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final isSharedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final durationParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final extensionParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final recordedDateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0));
          final attachmentIdParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 18);
          final audioDataParam = const fb.Uint8ListReader(lazy: false)
              .vTableGetNullable(buffer, rootOffset, 20) as Uint8List?;
          final object = AudioMessageEntity(
              path: pathParam,
              isShared: isSharedParam,
              duration: durationParam,
              name: nameParam,
              extension: extensionParam,
              recordedDate: recordedDateParam,
              attachmentId: attachmentIdParam,
              audioData: audioDataParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    MediaEntity: obx_int.EntityDefinition<MediaEntity>(
        model: _entities[1],
        toOneRelations: (MediaEntity object) => [],
        toManyRelations: (MediaEntity object) => {},
        getId: (MediaEntity object) => object.id,
        setId: (MediaEntity object, int id) {
          object.id = id;
        },
        objectToFB: (MediaEntity object, fb.Builder fbb) {
          final pathOffset = fbb.writeString(object.path);
          final nameOffset = fbb.writeString(object.name);
          final extensionOffset = fbb.writeString(object.extension);
          final commentOffset = fbb.writeString(object.comment);
          fbb.startTable(10);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.isPhoto);
          fbb.addOffset(2, pathOffset);
          fbb.addBool(3, object.isShared);
          fbb.addOffset(4, nameOffset);
          fbb.addOffset(5, extensionOffset);
          fbb.addInt64(6, object.date.millisecondsSinceEpoch);
          fbb.addOffset(7, commentOffset);
          fbb.addBool(8, object.hasComment);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final pathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final isSharedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final extensionParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0));
          final commentParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final hasCommentParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 20, false);
          final isPhotoParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final object = MediaEntity(
              path: pathParam,
              isShared: isSharedParam,
              name: nameParam,
              extension: extensionParam,
              date: dateParam,
              comment: commentParam,
              hasComment: hasCommentParam,
              isPhoto: isPhotoParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    SejourDayEntity: obx_int.EntityDefinition<SejourDayEntity>(
        model: _entities[2],
        toOneRelations: (SejourDayEntity object) => [],
        toManyRelations: (SejourDayEntity object) => {},
        getId: (SejourDayEntity object) => object.id,
        setId: (SejourDayEntity object, int id) {
          object.id = id;
        },
        objectToFB: (SejourDayEntity object, fb.Builder fbb) {
          final descriptionOffset = fbb.writeString(object.description);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, descriptionOffset);
          fbb.addBool(2, object.isFirstDay);
          fbb.addBool(3, object.isLastDay);
          fbb.addInt64(4, object.date.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final isFirstDayParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final isLastDayParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final object = SejourDayEntity(
              description: descriptionParam,
              isFirstDay: isFirstDayParam,
              isLastDay: isLastDayParam,
              date: dateParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AudioMessageEntity] entity fields to define ObjectBox queries.
class AudioMessageEntity_ {
  /// See [AudioMessageEntity.id].
  static final id =
      obx.QueryIntegerProperty<AudioMessageEntity>(_entities[0].properties[0]);

  /// See [AudioMessageEntity.path].
  static final path =
      obx.QueryStringProperty<AudioMessageEntity>(_entities[0].properties[1]);

  /// See [AudioMessageEntity.isShared].
  static final isShared =
      obx.QueryBooleanProperty<AudioMessageEntity>(_entities[0].properties[2]);

  /// See [AudioMessageEntity.duration].
  static final duration =
      obx.QueryDoubleProperty<AudioMessageEntity>(_entities[0].properties[3]);

  /// See [AudioMessageEntity.name].
  static final name =
      obx.QueryStringProperty<AudioMessageEntity>(_entities[0].properties[4]);

  /// See [AudioMessageEntity.extension].
  static final extension =
      obx.QueryStringProperty<AudioMessageEntity>(_entities[0].properties[5]);

  /// See [AudioMessageEntity.recordedDate].
  static final recordedDate =
      obx.QueryDateProperty<AudioMessageEntity>(_entities[0].properties[6]);

  /// See [AudioMessageEntity.attachmentId].
  static final attachmentId =
      obx.QueryStringProperty<AudioMessageEntity>(_entities[0].properties[7]);

  /// See [AudioMessageEntity.audioData].
  static final audioData = obx.QueryByteVectorProperty<AudioMessageEntity>(
      _entities[0].properties[8]);
}

/// [MediaEntity] entity fields to define ObjectBox queries.
class MediaEntity_ {
  /// See [MediaEntity.id].
  static final id =
      obx.QueryIntegerProperty<MediaEntity>(_entities[1].properties[0]);

  /// See [MediaEntity.isPhoto].
  static final isPhoto =
      obx.QueryBooleanProperty<MediaEntity>(_entities[1].properties[1]);

  /// See [MediaEntity.path].
  static final path =
      obx.QueryStringProperty<MediaEntity>(_entities[1].properties[2]);

  /// See [MediaEntity.isShared].
  static final isShared =
      obx.QueryBooleanProperty<MediaEntity>(_entities[1].properties[3]);

  /// See [MediaEntity.name].
  static final name =
      obx.QueryStringProperty<MediaEntity>(_entities[1].properties[4]);

  /// See [MediaEntity.extension].
  static final extension =
      obx.QueryStringProperty<MediaEntity>(_entities[1].properties[5]);

  /// See [MediaEntity.date].
  static final date =
      obx.QueryDateProperty<MediaEntity>(_entities[1].properties[6]);

  /// See [MediaEntity.comment].
  static final comment =
      obx.QueryStringProperty<MediaEntity>(_entities[1].properties[7]);

  /// See [MediaEntity.hasComment].
  static final hasComment =
      obx.QueryBooleanProperty<MediaEntity>(_entities[1].properties[8]);
}

/// [SejourDayEntity] entity fields to define ObjectBox queries.
class SejourDayEntity_ {
  /// See [SejourDayEntity.id].
  static final id =
      obx.QueryIntegerProperty<SejourDayEntity>(_entities[2].properties[0]);

  /// See [SejourDayEntity.description].
  static final description =
      obx.QueryStringProperty<SejourDayEntity>(_entities[2].properties[1]);

  /// See [SejourDayEntity.isFirstDay].
  static final isFirstDay =
      obx.QueryBooleanProperty<SejourDayEntity>(_entities[2].properties[2]);

  /// See [SejourDayEntity.isLastDay].
  static final isLastDay =
      obx.QueryBooleanProperty<SejourDayEntity>(_entities[2].properties[3]);

  /// See [SejourDayEntity.date].
  static final date =
      obx.QueryDateProperty<SejourDayEntity>(_entities[2].properties[4]);
}
